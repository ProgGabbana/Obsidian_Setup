body {
    --image-border-color: #cccccc;
    --image-border-width: 1px;
    --image-border-padding: 8px;
    --image-border-background: #f0f0f0;

    --micro: 70px;
    --tiny: 100px;
    --small: 200px;
    --small-med: 300px;
    --med-small: 400px;
    --medium: 500px;
    --med-tall: 600px;
    --tall: 700px;

    --list-min-width: 200px;
    --list-grid-min-width: 250px;
    --list-grid-wide-min-width: 350px;

    --callout-min-width: 200px;
    --callout-gap: 1em;
    --callout-margin: 0px;

    --float-small-width: 300px;
    --float-medium-width: 400px;
    --float-large-width: 600px;
    --float-left-callout-margin-inline: 0 12px;
    --float-right-callout-margin-inline: 12px 0;
    --float-callout-top-margin: 0em;

    --mcl-card-header-border-width: 1px;
    --mcl-card-bg-color: var(--background-secondary);
    --mcl-card-gap: 0.2em;
    --mcl-card-border-width: 1px;
    --mcl-card-border-color: var(--background-modifier-border);

    --col-rule-color: var(--background-modifier-border);
    --col-rule-width: 1px;

    --callout-background-default: var(--background-secondary-alt);
}

.popover.hover-popover {
    --micro: 70px;
    --tiny: 100px;
    --small: 150px;
    --small-med: 200px;
    --med-small: 250px;
    --medium: 300px;
    --med-tall: 450px;
    --tall: 500px;
}

@media (max-width: 500px) {
    body {
        --radius: 0px;
        --micro: 70px;
        --tiny: 100px;
        --small: 150px;
        --small-med: 200px;
        --med-small: 250px;
        --medium: 300px;
        --med-tall: 450px;
        --tall: 500px;
    }
}

/*
    Source: https://github.com/efemkay/obsidian-modular-css-layout/blob/main/MCL%20Multi%20Column.css
*/

.callout:not([data-callout="col"]):not([data-callout*="blank"]):not([data-callout="folder"]) {
    --callout-color: var(--accent-color) !important;
    border-color: var(--background-modifier-border) !important;
    box-shadow: 0 0 0 var(--mcl-card-border-width) var(--background-modifier-border) !important;
    --callout-border-color: var(--background-modifier-border);
    --callout-background: var(--callout-background-default) !important;
    background-color: var(--callout-background-default) !important;
}

/* --------------------------------------------------------------------- */
/* Callout Backgrounds: Light Themes (Black text) */
/* --------------------------------------------------------------------- */

.manila .callout:not([data-callout="col"]):not([data-callout*="blank"]):not([data-callout="folder"]),
.white .callout:not([data-callout="col"]):not([data-callout*="blank"]):not([data-callout="folder"]),
.pink .callout:not([data-callout="col"]):not([data-callout*="blank"]):not([data-callout="folder"]),
.yellow .callout:not([data-callout="col"]):not([data-callout*="blank"]):not([data-callout="folder"]) { /* AGGIUNTO: Yellow */
    --callout-background: color-mix(in srgb, var(--page-color) 90%, black) !important;
    background-color: var(--callout-background) !important;
}

/* --------------------------------------------------------------------- */
/* Callout Backgrounds: Dark Themes (White text) */
/* --------------------------------------------------------------------- */

.blue .callout:not([data-callout="col"]):not([data-callout*="blank"]):not([data-callout="folder"]),
.grey .callout:not([data-callout="col"]):not([data-callout*="blank"]):not([data-callout="folder"]), /* Updated from .gray */
.purple .callout:not([data-callout="col"]):not([data-callout*="blank"]):not([data-callout="folder"]), /* AGGIUNTO */
.green .callout:not([data-callout="col"]):not([data-callout*="blank"]):not([data-callout="folder"]) { /* AGGIUNTO */
    --callout-background: color-mix(in srgb, var(--page-color) 85%, white) !important;
    background-color: var(--callout-background) !important;
}

.callout:not([data-callout="col"]):not([data-callout*="blank"]):not([data-callout="folder"]) > .callout-title {
    color: var(--accent-color) !important;
}

/* --------------------------------------------------------------------- */
/* Callout Backgrounds: Nested in COL - Light Themes (Black text) */
/* --------------------------------------------------------------------- */

.manila div[data-callout="col"].callout .callout:not([data-callout="col"]),
.white div[data-callout="col"].callout .callout:not([data-callout="col"]),
.pink div[data-callout="col"].callout .callout:not([data-callout="col"]),
.yellow div[data-callout="col"].callout .callout:not([data-callout="col"]) { /* AGGIUNTO: Yellow */
    --dynamic-bg: color-mix(in srgb, var(--page-color) 90%, black);
    background-color: var(--dynamic-bg) !important;
    --mcl-card-bg-color: var(--dynamic-bg);
    --mcl-card-border-color: var(--background-modifier-border);
    --col-rule-color: var(--background-modifier-border);
}

/* --------------------------------------------------------------------- */
/* Callout Backgrounds: Nested in COL - Dark Themes (White text) */
/* --------------------------------------------------------------------- */

.blue div[data-callout="col"].callout .callout:not([data-callout="col"]),
.grey div[data-callout="col"].callout .callout:not([data-callout="col"]), /* Updated from .gray */
.purple div[data-callout="col"].callout .callout:not([data-callout="col"]), /* AGGIUNTO */
.green div[data-callout="col"].callout .callout:not([data-callout="col"]) { /* AGGIUNTO */
    --dynamic-bg: color-mix(in srgb, var(--page-color) 85%, white);
    background-color: var(--dynamic-bg) !important;
    --mcl-card-bg-color: var(--dynamic-bg);
    --mcl-card-border-color: var(--background-modifier-border);
    --col-rule-color: var(--background-modifier-border);
}

div[data-callout="col"].callout > .callout-title {
    display: none;
}

div[data-callout="col"].callout > .callout-content {
    display: contents;
}

div[data-callout="col"].callout {
    display: flex;
    flex-wrap: wrap;
    gap: var(--callout-gap);
    background: unset;
    border: unset;
    margin: unset;
    padding: unset;
    clear: both;
    --callout-blend-mode: normal;
    --columns: unset;
}

div[data-callout="col"].callout .callout:not([data-callout="col"]) {
    display: flex;
    flex-direction: column;
}

div[data-callout="col"].callout:not(.is-collapsed) .callout {
    margin-inline: var(--callout-margin);
    margin-block: var(--callout-margin);
}

div[data-callout="col"].callout .callout .callout-content {
    flex-grow: 1;
}

div[data-callout="col"].callout > .callout-content > *:is(div, ul, blockquote, p) {
    flex: 1 1 var(--callout-min-width);
    margin: 0;
}

body:not(.table-100):not(.table-max):not(.table-wide) .markdown-preview-view.is-readable-line-width:not(.table-100):not(.table-max):not(.table-wide) div[data-callout="col"].callout .dataview.list-view-ul {
    width: auto;
}

div[data-callout="col"][data-callout-metadata*="ctr"].callout {
    justify-content: center;
}

div[data-callout="col"][data-callout-metadata*="ctr"].callout > .callout-content > *:is(div, ul) {
    flex-grow: 0;
}

div[data-callout="col"][data-callout-metadata*="no-wrap"].callout {
    flex-wrap: nowrap;
    overflow-x: scroll;
}

div[data-callout="col"][data-callout-metadata*="no-wrap"] > .callout-content > *:is(div, ul) {
    flex-shrink: 0;
}

div[data-callout="col"] .callout[data-callout-metadata*="ctr"] {
    text-align: center;
}

div[data-callout="col"][data-callout-metadata*="menu"].callout {
    justify-content: center;
}

div[data-callout="col"][data-callout-metadata*="menu"].callout > .callout-content > *:is(div,ul) {
    flex-grow: 0;
    flex-basis: calc( var(--float-small-width) * 0.5 );
}

div[data-callout*="blank"].callout {
    --callout-blend-mode: normal;
    border: 0 !important;
    padding-top: 0;
    padding-inline: 5px;
    background: unset !important;
    box-shadow: unset !important;

    --callout-border-color: transparent !important;
    --callout-shadow: none !important;
    --callout-title-background: unset !important;
    --callout-background: unset !important;
    background-color: unset !important;
}

div[data-callout*="blank"].callout > .callout-title {
    display: none;
}

div[data-callout*="blank"].callout > .callout-content {
    display: contents;
}

div[data-callout*="blank"] .callout-content > p:only-child {
    margin-block: 0;
}

/*
    Source: https://github.com/SlRvb/Obsidian--ITS-Theme/blob/main/Snippets/S%20-%20Images%20Adjustments.css
*/

.view-content img[alt]:not([alt*=relative]):is([alt*=w7x],
[alt*=w10x],
[alt*=w20x],
[alt*=w30x],
[alt*=w40x],
[alt*=w50x],
[alt*=w60x],
[alt*=w70x],
[alt*=wfull]) {
    width: var(--image-adj-size-w);
}
.view-content img[alt]:not([alt*=relative]):is([alt*=h7x],
[alt*=h10x],
[alt*=h20x],
[alt*=h30x],
[alt*=h40x],
[alt*=h50x],
[alt*=h60x],
[alt*=h70x],
[alt*=hfull]) {
    height: var(--image-adj-size-h);
}

.view-content img[alt]:not([alt*=relative])[alt*=h7x] {
    --image-adj-size-h: var(--micro);
}
.view-content img[alt]:not([alt*=relative])[alt*=h10x] {
    --image-adj-size-h: var(--tiny);
}
.view-content img[alt]:not([alt*=relative])[alt*=h20x] {
    --image-adj-size-h: var(--small);
}
.view-content img[alt]:not([alt*=relative])[alt*=h30x] {
    --image-adj-size-h: var(--small-med);
}
.view-content img[alt]:not([alt*=relative])[alt*=h40x] {
    --image-adj-size-h: var(--med-small);
}
.view-content img[alt]:not([alt*=relative])[alt*=h50x] {
    --image-adj-size-h: var(--medium);
}
.view-content img[alt]:not([alt*=relative])[alt*=h60x] {
    --image-adj-size-h: var(--med-tall);
}
.view-content img[alt]:not([alt*=relative])[alt*=h70x] {
    --image-adj-size-h: var(--tall);
}
.view-content img[alt]:not([alt*=relative])[alt*=hfull] {
    --image-adj-size-h: 100%;
}
.view-content img[alt]:not([alt*=relative])[alt*=w7x] {
    --image-adj-size-w: var(--micro);
}
.view-content img[alt]:not([alt*=relative])[alt*=w10x] {
    --image-adj-size-w: var(--tiny);
}
.view-content img[alt]:not([alt*=relative])[alt*=w20x] {
    --image-adj-size-w: var(--small);
}
.view-content img[alt]:not([alt*=relative])[alt*=w30x] {
    --image-adj-size-w: var(--small-med);
}
.view-content img[alt]:not([alt*=relative])[alt*=w40x] {
    --image-adj-size-w: var(--med-small);
}
.view-content img[alt]:not([alt*=relative])[alt*=w50x] {
    --image-adj-size-w: var(--medium);
}
.view-content img[alt]:not([alt*=relative])[alt*=w60x] {
    --image-adj-size-w: var(--med-tall);
}
.view-content img[alt]:not([alt*=relative])[alt*=w70x] {
    --image-adj-size-w: var(--tall);
}
.view-content img[alt]:not([alt*=relative])[alt*=wfull] {
    --image-adj-size-w: 100%;
}


.image-embed[alt*=relative],
div:not(.image-embed) > img[alt*=relative] {
    --micro: 10%;
    --tiny: 20%;
    --small: 30%;
    --small-med: 40%;
    --med-small: 50%;
    --medium: 60%;
    --med-tall: 70%;
    --tall: 85%;
}
.image-embed[alt*=relative][alt*=w7x],
div:not(.image-embed) > img[alt*=relative][alt*=w7x] {
    width: var(--micro);
}
.image-embed[alt*=relative][alt*=w10x],
div:not(.image-embed) > img[alt*=relative][alt*=w10x] {
    width: var(--tiny);
}
.image-embed[alt*=relative][alt*=w20x],
div:not(.image-embed) > img[alt*=relative][alt*=w20x] {
    width: var(--small);
}
.image-embed[alt*=relative][alt*=w30x],
div:not(.image-embed) > img[alt*=relative][alt*=w30x] {
    width: var(--small-med);
}
.image-embed[alt*=relative][alt*=w40x],
div:not(.image-embed) > img[alt*=relative][alt*=w40x] {
    width: var(--med-small);
}
.image-embed[alt*=relative][alt*=w50x],
div:not(.image-embed) > img[alt*=relative][alt*=w50x] {
    width: var(--medium);
}
.image-embed[alt*=relative][alt*=w60x],
div:not(.image-embed) > img[alt*=relative][alt*=w60x] {
    width: var(--med-tall);
}
.image-embed[alt*=relative][alt*=w70x],
div:not(.image-embed) > img[alt*=relative][alt*=w70x] {
    width: var(--tall);
}
.image-embed[alt*=relative][alt*=h7x],
div:not(.image-embed) > img[alt*=relative][alt*=h7x] {
    height: var(--micro);
}
.image-embed[alt*=relative][alt*=h10x],
div:not(.image-embed) > img[alt*=relative][alt*=h10x] {
    height: var(--tiny);
}
.image-embed[alt*=relative][alt*=h20x],
div:not(.image-embed) > img[alt*=relative][alt*=h20x] {
    height: var(--small);
}
.image-embed[alt*=relative][alt*=h30x],
div:not(.image-embed) > img[alt*=relative][alt*=h30x] {
    height: var(--small-med);
}
.image-embed[alt*=relative][alt*=h40x],
div:not(.image-embed) > img[alt*=relative][alt*=h40x] {
    height: var(--med-small);
}
.image-embed[alt*=relative][alt*=h50x],
div:not(.image-embed) > img[alt*=relative][alt*=h50x] {
    height: var(--medium);
}
.image-embed[alt*=relative][alt*=h60x],
div:not(.image-embed) > img[alt*=relative][alt*=h60x] {
    height: var(--med-tall);
}
.image-embed[alt*=relative][alt*=h70x],
div:not(.image-embed) > img[alt*=relative][alt*=h70x] {
    height: var(--tall);
}
.image-embed[alt*=relative][alt*=hfull],
div:not(.image-embed) > img[alt*=relative][alt*=hfull] {
    height: 100%;
}

.image-embed[alt*=relative],
div:not(.image-embed) > img[alt*=relative] {
    display: block;
    margin: auto;
    max-height: 100%;
}

.img-adj-center.img-adj-center img,
img[alt~=ctr] {
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.img-adj-center.img-adj-center .is-live-preview img {
    margin-left: auto !important;
    margin-right: auto !important;
}

.markdown-rendered img[alt~=locl],
.markdown-rendered img[src*="#locl"],
.markdown-rendered .image-embed[alt~=locl],
.markdown-rendered .image-embed[src*="#locl"] {
    float: inline-start;
    margin-right: 2%;
    margin-top: 0;
    margin-bottom: 0;
}

img[alt~=locl],
.image-embed[alt~=locl],
img[src*="#locl"],
.image-embed[src*="#locl"] {
    float: left !important;
    margin-right: 2%;
    margin-top: 0;
    margin-bottom: 0;
}


.markdown-rendered img[alt~=locr],
.markdown-rendered img[src*="#locr"],
.markdown-rendered .image-embed[alt~=locr],
.markdown-rendered .image-embed[src*="#locr"] {
    float: inline-end;
    margin-left: 2%;
    margin-bottom: 0;
    margin-top: 0;
}

img[alt~=locr],
.image-embed[alt~=locr],
img[src*="#locr"],
.image-embed[src*="#locr"] {
    float: right !important;
    margin-left: 2%;
    margin-bottom: 0;
    margin-top: 0;
}

.image-captions .image-embed::after,
.image-embed[src*="#cap"]::after {
    content: attr(alt);
    color: gray;
    display: block;
    text-align: center;
}

.image-embed[src*="#cap"] {
    display: inline-block;
}

.image-embed[src*="#cap"] img {
    float: unset !important;
}

.image-embed[src*="#cap"][src*="#h7x"] img { height: var(--micro); }
.image-embed[src*="#cap"][src*="#h10x"] img { height: var(--tiny); }
.image-embed[src*="#cap"][src*="#h20x"] img { height: var(--small); }
.image-embed[src*="#cap"][src*="#h30x"] img { height: var(--small-med); }
.image-embed[src*="#cap"][src*="#h40x"] img { height: var(--med-small); }
.image-embed[src*="#cap"][src*="#h50x"] img { height: var(--medium); }
.image-embed[src*="#cap"][src*="#h60x"] img { height: var(--med-tall); }
.image-embed[src*="#cap"][src*="#h70x"] img { height: var(--tall); }
.image-embed[src*="#cap"][src*="#hfull"] img { height: 100%; }

.image-embed[src*="#cap"][src*="#w7x"], .image-embed[src*="#cap"][src*="#w7x"] img { width: var(--micro); }
.image-embed[src*="#cap"][src*="#w10x"], .image-embed[src*="#cap"][src*="#w10x"] img { width: var(--tiny); }
.image-embed[src*="#cap"][src*="#w20x"], .image-embed[src*="#cap"][src*="#w20x"] img { width: var(--small); }
.image-embed[src*="#cap"][src*="#w30x"], .image-embed[src*="#cap"][src*="#w30x"] img { width: var(--small-med); }
.image-embed[src*="#cap"][src*="#w40x"], .image-embed[src*="#cap"][src*="#w40x"] img { width: var(--med-small); }
.image-embed[src*="#cap"][src*="#w50x"], .image-embed[src*="#cap"][src*="#w50x"] img { width: var(--medium); }
    .image-embed[src*="#cap"][src*="#w60x"], .image-embed[src*="#cap"][src*="#w60x"] img { width: var(--med-tall); }
    .image-embed[src*="#cap"][src*="#w70x"], .image-embed[src*="#cap"][src*="#w70x"] img { width: var(--tall); }
    .image-embed[src*="#cap"][src*="#wfull"], .image-embed[src*="#cap"][src*="#wfull"] img { width: 100%; }

.mobile-image-viewer img[alt] {
    height: 100%;
    width: 100%;
    object-fit: contain;
}

:is(ul, ol) {
    display: flow-root;
}

/*
    Source: https://github.com/r-u-s-h-i-k-e-s-h/Obsidian-CSS-Snippets/blob/Collection/Snippets/Callout%20styling%20-%20Folder%20structure%20callout.md
*/

.callout[data-callout="folder" i] {
    --list-indent: 0em;
    --indentation-guide-color: transparent;
    overflow: scroll;
}
.callout[data-callout="folder" i] .list-bullet {
    display: none;
}
.callout[data-callout="folder" i] ul {
    -webkit-margin-after: 0;
    margin-block-end: 0;
}
.callout[data-callout="folder" i] li {
    --list-indent: 1.5em;
    list-style-type: none;
    font-family: var(--font-monospace);
    white-space: nowrap;
}
.callout[data-callout="folder" i] li li {
    position: relative;
    box-sizing: border-box;
}
.callout[data-callout="folder" i] li li::before,
.callout[data-callout="folder" i] li li::after {
    content: "";
    position: absolute;
    left: -1em;
    background: var(--list-marker-color);
}
.callout[data-callout="folder" i] li li::before {
    top: 0.85em;
    width: 10px;
    height: 1.5px;
    margin: auto;
}
.callout[data-callout="folder" i] li li::after {
    top: 0;
    bottom: 0;
    width: 1.5px;
    height: 100%;
}
.callout[data-callout="folder" i] li li:last-child::after {
    height: 0.85em;
}
.callout[data-callout="folder" i] li .list-collapse-indicator {
    position: absolute;
    left: -2em;
    margin: 0;
}
.callout[data-callout="folder" i] li em {
    opacity: 0.5;
    font-family: var(--font-text);
}
.callout[data-callout="folder" i] li code {
    font-size: 1em;
    font-family: var(--font-monospace);
    font-style: normal !important;
    background: none;
    white-space: pre;
    margin: 0;
    padding: 0;
}
.callout[data-callout="folder" i] li mark {
    font-style: italic;
    color: #d3a3e5;
}
.callout[data-callout="folder" i] .callout-content {
    overflow-x: visible;
}

.callout[data-callout="folder" i] {
    --callout-icon: folder;
    --callout-color: var(--background-modifier-border);

    --callout-background: var(--callout-background-default) !important;
    background-color: var(--callout-background-default) !important;
    border-color: var(--background-modifier-border) !important;
    box-shadow: 0 0 0 var(--mcl-card-border-width) var(--background-modifier-border) !important;
}

.callout[data-callout="folder" i] > .callout-title {
    display: flex !important;
    background-color: transparent !important;
    border-bottom: 1px solid var(--callout-color);
    padding-bottom: 0.5em;
    margin-bottom: 0.5em;
}

/* Rende il background del callout 'folder' trasparente solo quando non è annidato in un callout 'col' */
.callout[data-callout="folder" i]:not(div[data-callout="col"].callout .callout) {
    --callout-background: transparent !important;
    background-color: transparent !important;
    box-shadow: none !important; /* Rimuove l'ombra se non vuoi i bordi */
}

/* Rimuove anche i bordi se vuoi che sia completamente trasparente */
.callout[data-callout="folder" i]:not(div[data-callout="col"].callout .callout) {
    border-color: transparent !important;
}

/* Mantiene il titolo (header) del callout 'folder' separato con un bordo inferiore (come definito nel codice originale, ma adattato) */
.callout[data-callout="folder" i]:not(div[data-callout="col"].callout .callout) > .callout-title {
    border-bottom: 1px solid var(--callout-color); /* Puoi anche usare var(--background-modifier-border) o un colore specifico */
}

/*
  Source: https://github.com/r-u-s-h-i-k-e-s-h/Obsidian-CSS-Snippets/blob/Collection/Snippets/Code%20block%20styling%2001.md
*/

/* --------------------------------------------------------------------- */
/* Stili per Blocchi di Codice (Code Blocks) */
/* --------------------------------------------------------------------- */

/* Modalità Lettura */
.markdown-rendered pre {
  /* Usiamo una variabile del callout per il colore del bordo per coerenza */
  border: solid var(--background-modifier-border); 
  border-radius: var(--radius-m);
  box-shadow: var(--shadow-lm-only);
  background: transparent !important; /* Rende lo sfondo trasparente */
}

/* Modalità Live Preview */
.cm-s-obsidian div.HyperMD-codeblock-begin-bg {
  background: transparent !important; /* Rende lo sfondo trasparente */
  
  /* Usa un colore dinamico per il bordo superiore, come quello dei callout */
  border-top: solid var(--background-modifier-border);
  
  /* stylelint-disable-next-line declaration-no-important */
  border-top-right-radius: 8px !important;
  /* stylelint-disable-next-line declaration-no-important */
  border-top-left-radius: 8px !important;
  margin-top: 8px;
}

.cm-s-obsidian div.HyperMD-codeblock-end-bg {
  background: transparent !important; /* Rende lo sfondo trasparente */

  /* Usa un colore dinamico per il bordo inferiore */
  border-bottom: solid var(--background-modifier-border);
  border-bottom-right-radius: 8px;
  border-bottom-left-radius: 8px;
}

.cm-s-obsidian div.HyperMD-codeblock-bg {
  /* Usa un colore dinamico per i bordi laterali */
  border-right: solid var(--background-modifier-border);
  border-left: solid var(--background-modifier-border);
  background: transparent !important; /* Rende lo sfondo trasparente */
}
